1	1	main	PALABRA_RESERVADA
1	6	sum	IDENTIFICADOR
1	10	r	IDENTIFICADOR
1	12	3.14	NUMERO_FLOTANTE
1	16	+	OPERADOR_ARITMETICO
1	17	main	PALABRA_RESERVADA
1	21	)	DELIMITADOR
1	22	if	PALABRA_RESERVADA
1	24	{	DELIMITADOR
1	25	32	NUMERO_ENTERO
1	28	algo	IDENTIFICADOR
2	1	34.34	NUMERO_FLOTANTE
2	7	34.34	NUMERO_FLOTANTE
3	1	{	DELIMITADOR
5	1	/	OPERADOR_ARITMETICO
5	2	/	OPERADOR_ARITMETICO
5	4	Comentario	IDENTIFICADOR
5	15	Unilinea	IDENTIFICADOR
7	1	/*Comentario multilinea*/	COMENTARIO_MULTILINEA
10	1	++	OPERADOR_INCREMENTO
10	3	++	OPERADOR_INCREMENTO
10	5	++	OPERADOR_INCREMENTO
10	7	+	OPERADOR_ARITMETICO
11	1	int	PALABRA_RESERVADA
11	5	x	IDENTIFICADOR
11	6	,	DELIMITADOR
11	7	y	IDENTIFICADOR
11	8	,	DELIMITADOR
11	9	z	IDENTIFICADOR
11	10	;	DELIMITADOR
12	1	real	IDENTIFICADOR
12	6	a	IDENTIFICADOR
12	7	,	DELIMITADOR
12	8	b	IDENTIFICADOR
12	9	,	DELIMITADOR
12	10	c	IDENTIFICADOR
12	11	;	DELIMITADOR
13	2	suma	IDENTIFICADOR
13	6	=	OPERADOR_ASIGNACION
13	7	45	NUMERO_ENTERO
13	9	;	DELIMITADOR
14	1	x	IDENTIFICADOR
14	2	=	OPERADOR_ASIGNACION
14	3	32.32	NUMERO_FLOTANTE
14	8	;	DELIMITADOR
15	1	x	IDENTIFICADOR
15	2	=	OPERADOR_ASIGNACION
15	3	23	NUMERO_ENTERO
15	5	;	DELIMITADOR
16	1	y	IDENTIFICADOR
16	2	=	OPERADOR_ASIGNACION
16	3	2	NUMERO_ENTERO
16	4	+	OPERADOR_ARITMETICO
16	5	3	NUMERO_ENTERO
16	6	-	OPERADOR_ARITMETICO
16	7	1	NUMERO_ENTERO
16	8	;	DELIMITADOR
17	1	z	IDENTIFICADOR
17	2	=	OPERADOR_ASIGNACION
17	3	y	IDENTIFICADOR
17	4	+	OPERADOR_ARITMETICO
17	5	7	NUMERO_ENTERO
17	6	;	DELIMITADOR
18	1	y	IDENTIFICADOR
18	2	=	OPERADOR_ASIGNACION
18	3	y	IDENTIFICADOR
18	4	+	OPERADOR_ARITMETICO
18	5	1	NUMERO_ENTERO
18	6	;	DELIMITADOR
19	1	a	IDENTIFICADOR
19	2	=	OPERADOR_ASIGNACION
19	3	24.0	NUMERO_FLOTANTE
19	7	+	OPERADOR_ARITMETICO
19	8	4	NUMERO_ENTERO
19	9	-	OPERADOR_ARITMETICO
19	10	1	NUMERO_ENTERO
19	11	/	OPERADOR_ARITMETICO
19	12	3	NUMERO_ENTERO
19	13	*	OPERADOR_ARITMETICO
19	14	2	NUMERO_ENTERO
19	15	+	OPERADOR_ARITMETICO
19	16	34	NUMERO_ENTERO
19	18	-	OPERADOR_ARITMETICO
19	19	1	NUMERO_ENTERO
19	20	;	DELIMITADOR
20	1	x	IDENTIFICADOR
20	2	=	OPERADOR_ASIGNACION
20	3	(	DELIMITADOR
20	4	5	NUMERO_ENTERO
20	5	-	OPERADOR_ARITMETICO
20	6	3	NUMERO_ENTERO
20	7	)	DELIMITADOR
20	8	*	OPERADOR_ARITMETICO
20	9	(	DELIMITADOR
20	10	8	NUMERO_ENTERO
20	11	/	OPERADOR_ARITMETICO
20	12	2	NUMERO_ENTERO
20	13	)	DELIMITADOR
20	14	;	DELIMITADOR
21	1	y	IDENTIFICADOR
21	2	=	OPERADOR_ASIGNACION
21	3	5	NUMERO_ENTERO
21	4	+	OPERADOR_ARITMETICO
21	5	3	NUMERO_ENTERO
21	6	-	OPERADOR_ARITMETICO
21	7	2	NUMERO_ENTERO
21	8	*	OPERADOR_ARITMETICO
21	9	4	NUMERO_ENTERO
21	10	/	OPERADOR_ARITMETICO
21	11	7	NUMERO_ENTERO
21	12	-	OPERADOR_ARITMETICO
21	13	9	NUMERO_ENTERO
21	14	;	DELIMITADOR
22	1	z	IDENTIFICADOR
22	2	=	OPERADOR_ASIGNACION
22	3	8	NUMERO_ENTERO
22	4	/	OPERADOR_ARITMETICO
22	5	2	NUMERO_ENTERO
22	6	+	OPERADOR_ARITMETICO
22	7	15	NUMERO_ENTERO
22	9	*	OPERADOR_ARITMETICO
22	10	4	NUMERO_ENTERO
22	11	;	DELIMITADOR
23	1	y	IDENTIFICADOR
23	2	=	OPERADOR_ASIGNACION
23	3	14.54	NUMERO_FLOTANTE
23	8	;	DELIMITADOR
24	1	if	PALABRA_RESERVADA
24	3	(	DELIMITADOR
24	4	2	NUMERO_ENTERO
24	5	>	OPERADOR_RELACIONAL
24	6	3	NUMERO_ENTERO
24	7	)	DELIMITADOR
24	8	then	PALABRA_RESERVADA
25	9	y	IDENTIFICADOR
25	10	=	OPERADOR_ASIGNACION
25	11	a	IDENTIFICADOR
25	12	+	OPERADOR_ARITMETICO
25	13	3	NUMERO_ENTERO
25	14	;	DELIMITADOR
26	3	else	PALABRA_RESERVADA
27	7	if	PALABRA_RESERVADA
27	9	(	DELIMITADOR
27	10	4	NUMERO_ENTERO
27	11	>	OPERADOR_RELACIONAL
27	12	2	NUMERO_ENTERO
27	14	&&	OPERADOR_LOGICO
27	17	||	OPERADOR_LOGICO
27	20	!	OPERADOR_LOGICO
27	22	)	DELIMITADOR
27	23	then	PALABRA_RESERVADA
28	14	b	IDENTIFICADOR
28	15	=	OPERADOR_ASIGNACION
28	16	3.2	NUMERO_FLOTANTE
28	19	;	DELIMITADOR
29	8	else	PALABRA_RESERVADA
30	12	b	IDENTIFICADOR
30	13	=	OPERADOR_ASIGNACION
30	14	5.0	NUMERO_FLOTANTE
30	17	;	DELIMITADOR
31	8	end	PALABRA_RESERVADA
31	11	;	DELIMITADOR
32	8	y	IDENTIFICADOR
32	9	=	OPERADOR_ASIGNACION
32	10	y	IDENTIFICADOR
32	11	+	OPERADOR_ARITMETICO
32	12	1	NUMERO_ENTERO
32	13	;	DELIMITADOR
33	1	end	PALABRA_RESERVADA
33	4	;	DELIMITADOR
34	1	a	IDENTIFICADOR
34	2	+	OPERADOR_ARITMETICO
36	1	+	OPERADOR_ARITMETICO
36	2	;	DELIMITADOR
37	1	c	IDENTIFICADOR
37	2	--	OPERADOR_DECREMENTO
37	4	;	DELIMITADOR
38	1	x	IDENTIFICADOR
38	2	=	OPERADOR_ASIGNACION
38	3	3	NUMERO_ENTERO
38	4	+	OPERADOR_ARITMETICO
38	5	4	NUMERO_ENTERO
38	6	;	DELIMITADOR
39	1	do	PALABRA_RESERVADA
40	4	y	IDENTIFICADOR
40	5	=	OPERADOR_ASIGNACION
40	6	(	DELIMITADOR
40	7	y	IDENTIFICADOR
40	8	+	OPERADOR_ARITMETICO
40	9	1	NUMERO_ENTERO
40	10	)	DELIMITADOR
40	11	*	OPERADOR_ARITMETICO
40	12	2	NUMERO_ENTERO
40	13	+	OPERADOR_ARITMETICO
40	14	1	NUMERO_ENTERO
40	15	;	DELIMITADOR
41	4	while	PALABRA_RESERVADA
41	9	(	DELIMITADOR
41	10	x	IDENTIFICADOR
41	11	>	OPERADOR_RELACIONAL
41	12	7	NUMERO_ENTERO
41	13	)	DELIMITADOR
41	14	{	DELIMITADOR
41	15	x	IDENTIFICADOR
41	16	=	OPERADOR_ASIGNACION
41	17	6	NUMERO_ENTERO
41	18	+	OPERADOR_ARITMETICO
41	19	8	NUMERO_ENTERO
41	20	/	OPERADOR_ARITMETICO
41	21	9	NUMERO_ENTERO
41	22	*	OPERADOR_ARITMETICO
41	23	8	NUMERO_ENTERO
41	24	/	OPERADOR_ARITMETICO
41	25	3	NUMERO_ENTERO
41	26	;	DELIMITADOR
42	5	cin	PALABRA_RESERVADA
42	9	x	IDENTIFICADOR
42	10	;	DELIMITADOR
43	4	mas	IDENTIFICADOR
43	7	=	OPERADOR_ASIGNACION
43	8	36	NUMERO_ENTERO
43	10	/	OPERADOR_ARITMETICO
43	11	7	NUMERO_ENTERO
43	12	;	DELIMITADOR
44	4	}	DELIMITADOR
44	5	;	DELIMITADOR
46	2	until	PALABRA_RESERVADA
46	7	(	DELIMITADOR
46	8	y	IDENTIFICADOR
46	9	=	OPERADOR_ASIGNACION
49	1	=	OPERADOR_ASIGNACION
53	1	5	NUMERO_ENTERO
53	2	)	DELIMITADOR
53	3	;	DELIMITADOR
54	2	while	PALABRA_RESERVADA
54	7	(	DELIMITADOR
54	8	y	IDENTIFICADOR
54	9	==	OPERADOR_RELACIONAL
54	11	0	NUMERO_ENTERO
54	12	)	DELIMITADOR
54	13	{	DELIMITADOR
55	5	cin	PALABRA_RESERVADA
55	9	mas	IDENTIFICADOR
55	12	;	DELIMITADOR
56	5	cout	PALABRA_RESERVADA
56	10	x	IDENTIFICADOR
56	11	;	DELIMITADOR
57	1	}	DELIMITADOR
57	2	;	DELIMITADOR
58	1	}	DELIMITADOR
